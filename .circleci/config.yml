aliases:
  - &restore-cache
    keys:
      - dependencies-{{ .Branch }}-{{ checksum "package.json" }}
      # Fallback in case checksum fails
      - dependencies-{{ .Branch }}-

  - &save-cache
    paths:
      - node_modules
      - website/node_modules
    key: dependencies-{{ .Branch }}-{{ checksum "package.json" }}

  - &yarn-install
    run: |
      sudo npm i -g yarn@^0.27.5
      yarn --no-progress

  - &yarn-install-no-sudo
    run: |
      npm i -g yarn@^0.27.5
      yarn --no-progress

  - &deploy
    command: |
      # Deploy Jest website
      git config --global user.email "jest-bot@users.noreply.github.com"
      git config --global user.name "Website Deployment Script"
      echo "machine github.com login jest-bot password $GITHUB_TOKEN" > ~/.netrc
      # crowdin install start
      sudo apt-get update
      sudo apt-get install default-jre
      wget https://artifacts.crowdin.com/repo/deb/crowdin.deb -O crowdin.deb
      sudo dpkg -i crowdin.deb
      # crowdin install end
      crowdin --config crowdin.yaml upload sources --auto-update -b master
      crowdin --config crowdin.yaml download -b master
      cd website && GIT_USER=jest-bot npm run gh-pages

version: 2
jobs:
  test-browser:
    working_directory: ~/jest
    docker:
      - image: markhobson/node-chrome
    steps:
      - checkout
      - restore-cache: *restore-cache
      - *yarn-install-no-sudo
      - save-cache: *save-cache
      - run: yarn run test-ci-es5-build-in-browser

  test-node-8:
    working_directory: ~/jest
    docker:
      - image: circleci/node:8.1.4
    steps:
      - checkout
      - restore-cache: *restore-cache
      - *yarn-install
      - save-cache: *save-cache
      - run: yarn run test-ci-partial

  test-node-6:
    working_directory: ~/jest
    docker:
      - image: circleci/node:6.11.0
    steps:
      - checkout
      - restore-cache: *restore-cache
      - *yarn-install
      - save-cache: *save-cache
      - run: yarn run test-ci

  test-node-4:
    working_directory: ~/jest
    docker:
      - image: circleci/node:4.8.4
    steps:
      - checkout
      - restore-cache: *restore-cache
      - *yarn-install
      - save-cache: *save-cache
      - run: npm run test-ci-partial

  test-and-deploy-website:
    working_directory: ~/jest
    docker:
      - image: circleci/node:8.1.4
    steps:
      - checkout
      - restore-cache: *restore-cache
      - run: sudo npm i -g yarn@^0.27.5
      - run: |
          cd website
          yarn --no-progress
      - save-cache: *save-cache
      - run: |
          cd website
          yarn run test
      - deploy: *deploy

# Workflows enables us to run multiple jobs in parallel
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - test-node-8
      - test-node-6
      - test-node-4
      - test-browser
      - test-and-deploy-website
